openapi: 3.0.1
info:
  title: Swagger Rest Article
  description: This is the swagger file that goes with our server code
  version: 1.0.0
servers:
- url: /api
paths:
  /director:
    get:
      tags:
      - Director
      summary: Read the entire set of director , sorted by director id
      description: Read the entire set of director , sorted by director id
      operationId: director.read_all
      responses:
        200:
          description: Successfully read set of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Id of the director
                          uid:
                            type: integer
                            description: uid of the director
                          name:
                            type: string
                            description: name of the director
                          department:
                            type: string
                            description: departement of the director
                          gender:
                            type: integer
                            description: gender of the director
                          movie:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: Id of the movie
                                uid:
                                  type: integer
                                  description: uid of the movie
                                director_id:
                                  type: integer
                                  description: id of the director
                                original_title:
                                  type: string
                                  description: original title of the movie
                                title:
                                  type: string
                                  description: original title of the movie
    post:
      tags:
      - Director
      summary: Create a director
      description: Create a new director
      operationId: director.create
      requestBody:
        description: Director to create
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: integer
                  description: uid of the director
                name:
                  type: string
                  description: name of the director
                department:
                  type: string
                  description: departement of the director
                gender:
                  type: integer
                  description: gender of the director
        required: true
      responses:
        201:
          description: Successfully created director
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: director
  /director/{offset}/{limit}:
    get:
      tags:
      - Director
      summary: Read set of director with limit
      description: Read set of director with limit
      operationId: director.read_offset_limit
      parameters:
      - name: offset
        in: path
        description: offset of the set
        required: true
        schema:
          type: integer
      - name: limit
        in: path
        description: limit of the set
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully read set of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Id of the director
                          uid:
                            type: integer
                            description: uid of the director
                          name:
                            type: string
                            description: name of the director
                          department:
                            type: string
                            description: departement of the director
                          gender:
                            type: integer
                            description: gender of the director
                          movie:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: Id of the movie
                                uid:
                                  type: integer
                                  description: uid of the movie
                                director_id:
                                  type: integer
                                  description: id of the director
                                original_title:
                                  type: string
                                  description: original title of the movie
                                title:
                                  type: string
                                  description: original title of the movie
  /director/{director_id}:
    get:
      tags:
      - Director
      summary: Read one director
      description: Read one director
      operationId: director.read_one
      parameters:
      - name: director_id
        in: path
        description: Id of the director to get
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully read one director
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Id of the director
                          uid:
                            type: integer
                            description: uid of the director
                          name:
                            type: string
                            description: name of the director
                          department:
                            type: string
                            description: departement of the director
                          gender:
                            type: integer
                            description: gender of the director
                          movie:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: Id of the movie
                                uid:
                                  type: integer
                                  description: uid of the movie
                                director_id:
                                  type: integer
                                  description: id of the director
                                original_title:
                                  type: string
                                  description: original title of the movie
                                title:
                                  type: string
                                  description: original title of the movie
    put:
      tags:
      - Director
      summary: Update a director
      description: Update a director
      operationId: director.update
      parameters:
      - name: director_id
        in: path
        description: Id the director to update
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: integer
                  description: uid of the director
                name:
                  type: string
                  description: name of the director
                department:
                  type: string
                  description: departement of the director
                gender:
                  type: integer
                  description: gender of the director
        required: false
      responses:
        200:
          description: Successfully updated director
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: director
    delete:
      tags:
      - Director
      summary: Delete a director from the director list
      description: Delete a director
      operationId: director.delete
      parameters:
      - name: director_id
        in: path
        description: Id of the director to delete
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully deleted a director
          content: {}
  /director/gender/{gender}:
    get:
      tags:
      - Director
      summary: Read set of direction by gender
      description: Read set of direction by gender
      operationId: director.get_by_gender
      parameters:
      - name: gender
        in: path
        description: gender code to get
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully read set of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Id of the director
                          uid:
                            type: integer
                            description: uid of the director
                          name:
                            type: string
                            description: name of the director
                          department:
                            type: string
                            description: departement of the director
                          gender:
                            type: integer
                            description: gender of the director
                          movie:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: Id of the movie
                                uid:
                                  type: integer
                                  description: uid of the movie
                                director_id:
                                  type: integer
                                  description: id of the director
                                original_title:
                                  type: string
                                  description: original title of the movie
                                title:
                                  type: string
                                  description: original title of the movie
  /movie:
    get:
      tags:
      - Movie
      summary: Read the entire set of movie , sorted by movie id
      description: Read the entire set of movie , sorted by movie id
      operationId: movie.read_all
      responses:
        200:
          description: Successfully read set of movie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Id of the movie
                          uid:
                            type: integer
                            description: uid of the movie
                          original_title:
                            type: string
                            description: original title of the movie
                          title:
                            type: string
                            description: title of the movie
                          budget:
                            type: integer
                            description: budget of the movie
                          popularity:
                            type: integer
                            description: popularity of the movie
                          revenue:
                            type: integer
                            description: revenue of the movie
                          release_date:
                            type: string
                            description: release date of the movie
                          vote_average:
                            type: integer
                            description: average vote of the movie
                          vote_count:
                            type: integer
                            description: count vote of the movie
                          overview:
                            type: string
                            description: overview of the movie
                          tagline:
                            type: string
                            description: tagline of the movie
                          director:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: Id of the director
                              name:
                                type: string
                                description: name of the director
  /movie/popular:
    get:
      tags:
      - Movie
      summary: Read the top 5 movie
      description: Read the top 5 movie
      operationId: movie.get_highest_rating
      responses:
        200:
          description: Successfully read set of movie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Id of the movie
                          uid:
                            type: integer
                            description: uid of the movie
                          original_title:
                            type: string
                            description: original title of the movie
                          title:
                            type: string
                            description: title of the movie
                          budget:
                            type: integer
                            description: budget of the movie
                          popularity:
                            type: integer
                            description: popularity of the movie
                          revenue:
                            type: integer
                            description: revenue of the movie
                          release_date:
                            type: string
                            description: release date of the movie
                          vote_average:
                            type: integer
                            description: average vote of the movie
                          vote_count:
                            type: integer
                            description: count vote of the movie
                          overview:
                            type: string
                            description: overview of the movie
                          tagline:
                            type: string
                            description: tagline of the movie
                          director:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: Id of the director
                              name:
                                type: string
                                description: name of the director
  /movie/{offset}/{limit}:
    get:
      tags:
      - Movie
      summary: Read a limited set of movies data
      description: Read a limited set of movies data
      operationId: movie.read_offset_limit
      parameters:
      - name: offset
        in: path
        description: offset
        required: true
        schema:
          type: integer
      - name: limit
        in: path
        description: limit
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully read a limited set of movies data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Id of the movie
                  uid:
                    type: integer
                    description: uid of the movie
                  original_title:
                    type: string
                    description: original title of the movie
                  title:
                    type: string
                    description: title of the movie
                  budget:
                    type: integer
                    description: budget of the movie
                  popularity:
                    type: integer
                    description: popularity of the movie
                  revenue:
                    type: integer
                    description: revenue of the movie
                  release_date:
                    type: string
                    description: release date of the movie
                  vote_average:
                    type: integer
                    description: average vote of the movie
                  vote_count:
                    type: integer
                    description: count vote of the movie
                  overview:
                    type: string
                    description: overview of the movie
                  tagline:
                    type: string
                    description: tagline of the movie
                  director:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Id of the director
                      name:
                        type: string
                        description: name of the director
  /movie/{movie_id}:
    get:
      tags:
      - Movie
      summary: Read a particular movie
      description: Read a particular movie
      operationId: movie.read_one
      parameters:
      - name: movie_id
        in: path
        description: Id of movie
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully read movie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Id of the movie
                  uid:
                    type: integer
                    description: uid of the movie
                  original_title:
                    type: string
                    description: original title of the movie
                  title:
                    type: string
                    description: title of the movie
                  budget:
                    type: integer
                    description: budget of the movie
                  popularity:
                    type: integer
                    description: popularity of the movie
                  revenue:
                    type: integer
                    description: revenue of the movie
                  release_date:
                    type: string
                    description: release date of the movie
                  vote_average:
                    type: integer
                    description: average vote of the movie
                  vote_count:
                    type: integer
                    description: count vote of the movie
                  overview:
                    type: string
                    description: overview of the movie
                  tagline:
                    type: string
                    description: tagline of the movie
                  director:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Id of the director
                      name:
                        type: string
                        description: name of the director
    put:
      tags:
      - Movie
      summary: Update a movie
      description: Update a note
      operationId: movie.update
      parameters:
      - name: movie_id
        in: path
        description: Id of the movie
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: integer
                  description: uid of the movie
                original_title:
                  type: string
                  description: original title of the movie
                title:
                  type: string
                  description: title of the movie
                budget:
                  type: integer
                  description: budget of the movie
                popularity:
                  type: integer
                  description: popularity of the movie
                revenue:
                  type: integer
                  description: revenue of the movie
                release_date:
                  type: string
                  description: release date of the movie
                vote_average:
                  type: integer
                  description: average vote of the movie
                vote_count:
                  type: integer
                  description: count vote of the movie
                overview:
                  type: string
                  description: overview of the movie
                tagline:
                  type: string
                  description: tagline of the movie
        required: false
      responses:
        201:
          description: Successfully created a movie
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: movie
    delete:
      tags:
      - Movie
      summary: Delete a movie
      description: Delete a movie
      operationId: movie.delete
      parameters:
      - name: movie_id
        in: path
        description: Id of movie
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully deleted a movie
          content: {}
  /director/{director_id}/movie:
    post:
      tags:
      - Movie
      summary: Create a movie associated with a director
      description: Create a movie associated with a director
      operationId: movie.create
      parameters:
      - name: director_id
        in: path
        description: Id of director associated with movie
        required: true
        schema:
          type: integer
      requestBody:
        description: Text content of the movie to create
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: integer
                  description: uid of the movie
                original_title:
                  type: string
                  description: original title of the movie
                title:
                  type: string
                  description: title of the movie
                budget:
                  type: integer
                  description: budget of the movie
                popularity:
                  type: integer
                  description: popularity of the movie
                revenue:
                  type: integer
                  description: revenue of the movie
                release_date:
                  type: string
                  description: release date of the movie
                vote_average:
                  type: number
                  description: average vote of the movie
                vote_count:
                  type: integer
                  description: count vote of the movie
                overview:
                  type: string
                  description: overview of the movie
                tagline:
                  type: string
                  description: tagline of the movie
        required: true
      responses:
        201:
          description: Successfully created a movie
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: movie
  /movie/director/{director_id}:
    get:
      tags:
      - Movie
      summary: Read a particular movie associated with a director
      description: Read a particular movie associated with a director
      operationId: movie.read_by_director
      parameters:
      - name: director_id
        in: path
        description: Id of director
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successfully read set of movie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Id of the movie
                          uid:
                            type: integer
                            description: uid of the movie
                          original_title:
                            type: string
                            description: original title of the movie
                          title:
                            type: string
                            description: title of the movie
                          budget:
                            type: integer
                            description: budget of the movie
                          popularity:
                            type: integer
                            description: popularity of the movie
                          revenue:
                            type: integer
                            description: revenue of the movie
                          release_date:
                            type: string
                            description: release date of the movie
                          vote_average:
                            type: integer
                            description: average vote of the movie
                          vote_count:
                            type: integer
                            description: count vote of the movie
                          overview:
                            type: string
                            description: overview of the movie
                          tagline:
                            type: string
                            description: tagline of the movie
                          director:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: Id of the director
                              name:
                                type: string
                                description: name of the director
components: {}
